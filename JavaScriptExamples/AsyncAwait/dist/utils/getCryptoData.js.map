{"version":3,"sources":["../../src/utils/getCryptoData.js"],"names":["XMLHttpRequest","require","getExchangeData","_url","Promise","resolve","reject","xmlhttp","method","url","open","onerror","console","log","Error","onreadystatechange","status","responseText","readyState","exchangeData","timeStamp","Date","returnObj","send"],"mappings":";;;;;;;;;;;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,cAA/C;;AAEA,SAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAE7B,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAY,iBAAgBC,OAAhB,EAAyBC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,OADa,GACH,IAAIP,cAAJ,EADG,EAEfQ,MAFe,GAEN,KAFM,EAGfC,GAHe,GAGTN,IAHS;AAKjBI,cAAAA,OAAO,CAACG,IAAR,CAAaF,MAAb,EAAqBC,GAArB,EAA0B,IAA1B;;AACAF,cAAAA,OAAO,CAACI,OAAR,GAAkB,YAAY;AAC5BC,gBAAAA,OAAO,CAACC,GAAR,qDAAyDJ,GAAzD;AACAH,gBAAAA,MAAM,CAAC,IAAIQ,KAAJ,qDAAuDL,GAAvD,EAAD,CAAN;AACA;AACD,eAJD;;AAKAF,cAAAA,OAAO,CAACQ,kBAAR,GAA6B,YAAW;AACtC;AACA;AACA;AACA,oBAAI,KAAKC,MAAL,KAAc,GAAlB,EAAuB;AACrBJ,kBAAAA,OAAO,CAACC,GAAR,8BAAkCJ,GAAlC;AACAH,kBAAAA,MAAM,CAACC,OAAO,CAACU,YAAT,CAAN;AACD,iBAHD,MAIK,IAAI,KAAKC,UAAL,KAAkB,CAAlB,IAAuB,KAAKF,MAAL,KAAc,GAAzC,EAA8C;AACjD,sBAAIG,YAAY,GAAGZ,OAAO,CAACU,YAA3B;AACA,sBAAIG,SAAS,GAAG,IAAIC,IAAJ,EAAhB;AACA,sBAAIC,SAAS,GAAG;AACdF,oBAAAA,SAAS,EAATA,SADc;AAEdD,oBAAAA,YAAY,EAAZA;AAFc,mBAAhB;AAIAP,kBAAAA,OAAO,CAACC,GAAR,iDAAqDJ,GAArD;AACAJ,kBAAAA,OAAO,CAACiB,SAAD,CAAP;AACD;AACF,eAlBD;;AAmBAf,cAAAA,OAAO,CAACgB,IAAR;;AA9BiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAgCD","sourcesContent":["\nvar XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\n\nfunction getExchangeData(_url) {\n\n  return new Promise(async function (resolve, reject) {\n    var xmlhttp = new XMLHttpRequest(),\n      method = \"GET\",\n      url = _url;\n\n    xmlhttp.open(method, url, true);\n    xmlhttp.onerror = function () {\n      console.log(`** An error occurred retrieving data from ${url}`);\n      reject(new Error(`** An error occurred retrieving data from ${url}`));\n      return;\n    };\n    xmlhttp.onreadystatechange = function() {\n      // console.log(`Ready state: ${this.readyState}`);\n      // console.log(`Status: ${this.status}`);\n      // console.log(`Response text: ${xmlhttp.responseText}`);\n      if (this.status===404) {\n        console.log(`Error 404 querying ${url}`);\n        reject(xmlhttp.responseText);\n      }\n      else if (this.readyState===4 && this.status===200) {\n        let exchangeData = xmlhttp.responseText;\n        let timeStamp = new Date();\n        let returnObj = {\n          timeStamp,\n          exchangeData\n        };\n        console.log(`Resolving promise getExchangeData for ${url}`);\n        resolve(returnObj);\n      }\n    }\n    xmlhttp.send();\n  });\n}\n\nexport {getExchangeData};\n"],"file":"getCryptoData.js"}