{"version":3,"sources":["../src/setTimeout.js"],"names":["myFunc","arg","console","log","setTimeout01","setTimeout","setTimeout02","i","j"],"mappings":";;;;;;;;AAAA;;;AAKA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,sBAA0BF,GAA1B;AACD;;AAED,SAASG,YAAT,GAAwB;AAEtBF,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAE,EAAAA,UAAU,CAACL,MAAD,EAAS,IAAT,EAAe,OAAf,CAAV;AACD;;AAED,SAASM,YAAT,GAAwB;AAEtBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACAE,EAAAA,UAAU,CAACL,MAAD,EAAS,CAAT,EAAY,SAAZ,CAAV;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oEAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,qFAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,iEAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,OAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,MAAf,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIC,CAAC,GAAG,SAAOD,CAAf;AACD;;AACDL,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD","sourcesContent":["/* setTimeout.js\n * desc: Examples using setTimeout from node to see how events work.\n */\n\n\nfunction myFunc(arg) {\n  console.log(`arg was => ${arg}`);\n}\n\nfunction setTimeout01() {\n\n  console.log(\"Will call myFunc in 2.5sec with arg=funky\");\n  setTimeout(myFunc, 2500, 'funky');\n}\n\nfunction setTimeout02() {\n\n  console.log(\"Will call myFunc with delay set to 0 and arg=instant\");\n  setTimeout(myFunc, 0, 'instant');\n  console.log(\"Even though myFunc is request with 0 delay this will output first.\");\n  console.log(\"That is because the call to mFunc is on the event queue while this is running code.\");\n  console.log(\"Only after this function yields the CPU will myFunc be invoked.\");\n  console.log(\"Here is a long calc...\");\n  for(var i=0; i<250000; i++) {\n    var j = 1.2345*i;\n  }\n  console.log(\"Long calc is done...\");\n  console.log(\"Ending this function now!\");\n}\n\nexport { setTimeout01, setTimeout02 };\n"],"file":"setTimeout.js"}