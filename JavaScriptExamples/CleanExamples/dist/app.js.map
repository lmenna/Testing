{"version":3,"sources":["../src/app.js"],"names":["runClosureExample","console","log","p","PersonClosure","_name","getName","functionIsVisibleOutside","nowICanSeeYou","runBigNumberExample","aNumber","outputBigNumber","aBN","logBN","outputBN","convertBN","convertBNtoBigNumber","toString","valueOf","toFormat","runES6Features","undefined","PersonClass","pn","setName","name","e","Employee","aNumberArray","result","resultAnonymous","sampleObj","a","b","c"],"mappings":"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","sourcesContent":["import { PersonClosure } from \"./Closure\";\nimport { aBigOne, addOne, aBigOneBN, addOneBN } from \"./BigNumbers\";\nimport { defaultParametersMultiply, templateLiterals, multiLineStrings,\n  scopeTestVar, scopeTestLet, PersonClass, Employee, forEachTest, forEachAnonymousTest,\n   mapArray01, filterArray01, objectLiterals } from \"./ES6Features\";\n\nfunction runClosureExample() {\n  console.log(\"Closure Example\");\n  var p = new PersonClosure(\"Luigi\");\n  console.log(\"Person p:\", p);\n  console.log(\"Person p._name:\", p._name);\n  console.log(\"Person p.getName:\", p.getName());\n  console.log(\"Person p.functionIsVisibleOutside:\", p.functionIsVisibleOutside());\n  console.log(\"Person p.canYouSeeMe is undefined use p.nowICanSeeYou:\", p.nowICanSeeYou());\n}\n\n\nfunction runBigNumberExample() {\n\n  console.log(\"BigNumber Example\");\n  let aNumber = aBigOne();\n  outputBigNumber(aNumber);\n  aNumber = addOne(aNumber);\n  outputBigNumber(aNumber);\n  let aBN = aBigOneBN();\n  logBN(aBN);\n  aBN = addOneBN(aBN);\n  outputBN(aBN);\n  let convertBN = convertBNtoBigNumber(aNumber);\n}\n\nfunction outputBigNumber(aNumber) {\n  console.log(\"BigNumber:\", aNumber);\n  console.log(\"BigNumber.toString():\", aNumber.toString());\n  console.log(\"BigNumber.toString(16):\", aNumber.toString(16));\n  console.log(\"BigNumber.valueOf():\", aNumber.valueOf());\n  console.log(\"BigNumber.toFormat(0):\", aNumber.toFormat(0));\n}\n\nfunction outputBN(aNumber) {\n  console.log(\"BN:\", aNumber);\n  console.log(\"BN.toString():\", aNumber.toString());\n}\n\nfunction runES6Features() {\n\n    console.log(\"ES6 Default parameters\");\n    console.log(\"Call multiply with no parameters:\", defaultParametersMultiply());\n    // Note: It is best to put undefined in for missing parameters\n    console.log(\"Call multiply with first parameter:\", defaultParametersMultiply(3,undefined));\n    // For the next call the undefined for the missing first parameter is required\n    console.log(\"Call multiply with second parameter:\", defaultParametersMultiply(undefined,4));\n    console.log(\"Call multiply with both parameters:\", defaultParametersMultiply(3,4));\n    // Template literals allow variables to be embedded into strings.  Use `backquotes` to set these.\n    console.log(templateLiterals());\n    // Multiline strings can now be defined.  Use `backquotes` to set these.\n    console.log(multiLineStrings());\n    // For var we expect all inner scopes in the function to just apply\n    // at the level of the function.  All inner declarations using var don't reallocate the variable.\n    console.log(scopeTestVar());\n    // For let we expect the variables defined in the inner scopes to reallocate the variable.\n    console.log(scopeTestLet());\n    // Try a simple person class\n    let p = new PersonClass(\"Luigi\",\"Norfolk St\", 21);\n    console.log(\"Class Person instance p:\", p);\n    let pn = new PersonClass();\n    console.log(\"Class Person instance, nothing set, pn:\", pn);\n    pn.setName(\"Named\");\n    console.log(\"     Set the name. pn:\", pn);\n    console.log(\"     Get the name. pn.getName:\", pn.getName());\n    console.log(\"     Get the name, accessing it directly. pn.name:\", pn.name);\n    pn.name = \"I changed it directly. All members are public.\";\n    console.log(\"     Set the name, accessing it directly. pn.name:\", pn.name);\n    // Create and instance of Employee which is a PersonClass\n    let e = new Employee(\"Luigi\",\"Norfolk St\", 21, \"E-123456\");\n    console.log(\"Class Employee instance. e:\", e );\n    // Checkout new ES6 array functions\n    let aNumberArray = [1,2,3,4,5];\n    let result = forEachTest(aNumberArray);\n    console.log(\"Input Array:\", aNumberArray);\n    console.log(\"forEachTest result:\", result)\n    let resultAnonymous = forEachAnonymousTest(aNumberArray);\n    console.log(\"forEachAnonymousTest resultAnonymous:\", resultAnonymous)\n    console.log(\"Map across an array and double each element\");\n    console.log(\"Original array:\", aNumberArray);\n    console.log(\"Result from mapping that doubles each element:\", mapArray01(aNumberArray));\n    console.log(\"Filter array selecting out odd numbers\");\n    console.log(\"Original array:\", aNumberArray);\n    console.log(\"Filtered array showing only odd numbers:\", filterArray01(aNumberArray));\n    console.log(\"Object literals (name value pairs) now automatically set the names\");\n    console.log(\"Title, author, genre example:\", objectLiterals(\"The Hobbit\", \"J.R.R. Tolkein\", \"Fantasy\"));\n    console.log(\"Destructuring is where you pull name value pairs out of an object.\");\n    let sampleObj = { a: \"this is a\",\n      b: \"this is b\",\n      c: \"this is c\"};\n    console.log(\"Object is:\", sampleObj);\n    console.log(\"Pull out a and c.  a:\", sampleObj.a, \" c:\", sampleObj.c);\n}\n\nrunES6Features();\n"],"file":"app.js"}