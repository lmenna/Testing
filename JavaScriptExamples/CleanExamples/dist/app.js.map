{"version":3,"sources":["../src/app.js"],"names":["require","start","Date","now","log","msg","console","runClosureExample","p","PersonClosure","_name","getName","functionIsVisibleOutside","nowICanSeeYou","runClosureImplementingACounter","incrementCounter","decrementCounter","runBigNumberExample","aNumber","outputBigNumber","aBN","outputBN","toString","valueOf","toFormat","runES6Features","undefined","PersonClass","pn","setName","name","e","Employee","aNumberArray","result","resultAnonymous","sampleObj","a","b","c","Math","random","arrayToSpread","spreadTheArray","runLexicalScope","l","LexicalScoping","getVar","getVarArrow","getVarFromHidden","getVarFromHiddenArrow","runsetTimeout","runclassesAndThis","leo1","eat","leo2","leo3","Animal_V3","prototype","leoNew","AnimalWithNew","key","leoObj","AnimalAsClass","Object","getPrototypeOf","err","runArrayTests","runBabelGenTest","p1","PersonAsFunction","p2","runAsyncAwaitBlocker","then","runAsyncAwaitNonBlocker","Promise","all","runAsyncAwaitPromiseError"],"mappings":"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","sourcesContent":["/* app.js\n * desc: Used to launch various JavaScript examples.  Each function in this file will run code\n *       that shows how a specific JavaScript feature works.  Feel free to add more examples\n *       and to run only those examples that are interesting to you.\n */\n\n\"use strict\";\nrequire(\"@babel/polyfill\");\n\nimport { PersonClosure, createCounters } from \"./Closure\";\nimport { aBigOne, addOne, aBigOneBN, addOneBN } from \"./BigNumbers\";\nimport { defaultParametersMultiply, templateLiterals, multiLineStrings,\n  scopeTestVar, scopeTestLet, PersonClass, Employee, forEachTest, forEachAnonymousTest,\n  mapArray01, filterArray01, objectLiterals, multipleParameters, spreadTheArray } from \"./ES6Features\";\nimport { LexicalScoping, simpleHoistingExample } from \"./lexicalScoping\";\nimport { setTimeout01, setTimeout02 } from \"./setTimeout\";\nimport { whatIsThis, testObjectCreate, Animal_V1, Animal_V2, Animal_V3, AnimalWithNew, AnimalAsClass,\n  leaveOutNew } from \"./classesAndThis\";\nimport { arrayNewTesting } from \"./Arrays\";\nimport { PersonAsClass, PersonAsFunction } from \"./babelClassGen\";\nimport { codeBlocker, codeNonBlocker, myPromiseStillBlocking, myPromiseInParallel, myPromiseError } from \"./AsyncAwait.js\";\n\n// Utility to log with a timestamp.\nconst start = Date.now();\nconst log = (msg) => {console.log( `     -->> ${Date.now()-start} ${msg}` )}\n\n/* runClosureExample()\n * desc: A closure is a function with an internal state that perisists after the function\n *       is called.  This function is not a closure, but it runs the function which are.\n *       The closure functions are located in Closure.js  \n */\nfunction runClosureExample() {\n  console.log(\"\\n--->> runClosureExample\");\n  var p = new PersonClosure(\"Luigi\");\n  console.log(\"Person p:\", p);\n  console.log(\"Person p._name:\", p._name);\n  console.log(\"Person p.getName:\", p.getName());\n  console.log(\"Person p.functionIsVisibleOutside:\", p.functionIsVisibleOutside());\n  console.log(\"Person p.canYouSeeMe is undefined use p.nowICanSeeYou:\", p.nowICanSeeYou());\n}\n\n\n\nfunction runClosureImplementingACounter() {\n\n  console.log(\"\\n--->> runClosureImplementingACounter - Another closure example.\");\n  console.log(\"Create one counter closure.\");\n  console.log(\"The counter closure has one variable in the PLSRD - Persistent Lexically Scoped Reference Data\");\n  console.log(\"This variable is internally called counter.\");\n  console.log(\"It can only be accesses using the functions returned by createCounters\");\n  let [incrementCounter, decrementCounter] = createCounters();\n  incrementCounter();incrementCounter();incrementCounter();\n  decrementCounter();\n\n  console.log(\"Create another counter closure.\");\n  console.log(\"It is expected that this new closure will have its own counter, starting back at 0.\");\n  [incrementCounter, decrementCounter] = createCounters();\n  incrementCounter();incrementCounter();incrementCounter();\n  decrementCounter();\n}\n\n/* runBigNumberExample()\n * desc: \n */\nfunction runBigNumberExample() {\n  console.log(\"\\n--->> runBigNumberExample\");\n  console.log(\"BigNumber Example\");\n  let aNumber = aBigOne();\n  outputBigNumber(aNumber);\n  aNumber = addOne(aNumber);\n  outputBigNumber(aNumber);\n  let aBN = aBigOneBN();\n  outputBN(aBN);\n  aBN = addOneBN(aBN);\n  outputBN(aBN);\n}\n\n/* outputBigNumber()\n * desc: \n */\nfunction outputBigNumber(aNumber) {\n  console.log(\"BigNumber:\", aNumber);\n  console.log(\"BigNumber.toString():\", aNumber.toString());\n  console.log(\"BigNumber.toString(16):\", aNumber.toString(16));\n  console.log(\"BigNumber.valueOf():\", aNumber.valueOf());\n  console.log(\"BigNumber.toFormat(0):\", aNumber.toFormat(0));\n}\n\nfunction outputBN(aNumber) {\n  console.log(\"BN:\", aNumber);\n  console.log(\"BN.toString():\", aNumber.toString());\n}\n\n/* runES6Features()\n * desc: \n */\nfunction runES6Features() {\n\n  console.log(\"\\n--->> runES6Features\");\n  console.log(\"ES6 Default parameters\");\n  console.log(\"Call multiply with no parameters:\", defaultParametersMultiply());\n  // Note: It is best to put undefined in for missing parameters\n  console.log(\"Call multiply with first parameter:\", defaultParametersMultiply(3,undefined));\n  // For the next call the undefined for the missing first parameter is required\n  console.log(\"Call multiply with second parameter:\", defaultParametersMultiply(undefined,4));\n  console.log(\"Call multiply with both parameters:\", defaultParametersMultiply(3,4));\n  // Template literals allow variables to be embedded into strings.  Use `backquotes` to set these.\n  console.log(templateLiterals());\n  // Multiline strings can now be defined.  Use `backquotes` to set these.\n  console.log(multiLineStrings());\n  // For var we expect all inner scopes in the function to just apply\n  // at the level of the function.  All inner declarations using var don't reallocate the variable.\n  console.log(scopeTestVar());\n  // For let we expect the variables defined in the inner scopes to reallocate the variable.\n  console.log(scopeTestLet());\n  // Try a simple person class\n  let p = new PersonClass(\"Luigi\",\"Norfolk St\", 21);\n  console.log(\"Class Person instance p:\", p);\n  let pn = new PersonClass();\n  console.log(\"Class Person instance, nothing set, pn:\", pn);\n  pn.setName(\"Named\");\n  console.log(\"     Set the name. pn:\", pn);\n  console.log(\"     Get the name. pn.getName:\", pn.getName());\n  console.log(\"     Get the name, accessing it directly. pn.name:\", pn.name);\n  pn.name = \"I changed it directly. All members are public.\";\n  console.log(\"     Set the name, accessing it directly. pn.name:\", pn.name);\n  // Create and instance of Employee which is a PersonClass\n  let e = new Employee(\"Luigi\",\"Norfolk St\", 21, \"E-123456\");\n  console.log(\"Class Employee instance. e:\", e );\n  // Checkout new ES6 array functions\n  let aNumberArray = [1,2,3,4,5];\n  let result = forEachTest(aNumberArray);\n  console.log(\"Input Array:\", aNumberArray);\n  console.log(\"forEachTest result:\", result);\n  let resultAnonymous = forEachAnonymousTest(aNumberArray);\n  console.log(\"forEachAnonymousTest resultAnonymous:\", resultAnonymous);\n  console.log(\"Map across an array and double each element\");\n  console.log(\"Original array:\", aNumberArray);\n  console.log(\"Result from mapping that doubles each element:\", mapArray01(aNumberArray));\n  console.log(\"Filter array selecting out odd numbers\");\n  console.log(\"Original array:\", aNumberArray);\n  console.log(\"Filtered array showing only odd numbers:\", filterArray01(aNumberArray));\n  console.log(\"Object literals (name value pairs) now automatically set the names\");\n  console.log(\"Title, author, genre example:\", objectLiterals(\"The Hobbit\", \"J.R.R. Tolkein\", \"Fantasy\"));\n  console.log(\"Destructuring is where you pull name value pairs out of an object.\");\n  let sampleObj = { a: \"this is a\",\n    b: \"this is b\",\n    c: \"this is c\"};\n  console.log(\"Object is:\", sampleObj);\n  console.log(\"Pull out a and c.  a:\", sampleObj.a, \" c:\", sampleObj.c);\n  console.log(\"Call multipleParameters:\", multipleParameters(\"required\"\n    , \"optional1\", \"optional2\", \"optional3\", 1, 2, Math.random()));\n  let arrayToSpread = [\"AryV0\", \"AryV1\", \"AryV2\"];\n  console.log(\"Call spreadTheArray:\", spreadTheArray(\"requiredParam\", ...arrayToSpread));\n}\n\nfunction runLexicalScope() {\n\n  console.log(\"\\n--->> runLexicalScope\");\n  console.log(\"simpleHoistingExample:\", simpleHoistingExample());\n  let l = new LexicalScoping();\n  console.log(\"Instance of LexicalScoping:\", l);\n  console.log(\"l.getVar:\", l.getVar());\n  console.log(\"l.getVarArrow:\", l.getVarArrow());\n  console.log(\"l.getValHidden:\", l.getVarFromHidden());\n  console.log(\"getVarFromHiddenArrow:\", l.getVarFromHiddenArrow());\n}\n\n/* runsetTimeout\n * desc: Example showing how executing code takes precendence over something placed immediately on the event\n *       queue (placed on the event queue with a timeout of 0).\n */\nfunction runsetTimeout() {\n  console.log(\"\\n--->> runsetTimeout\");\n  setTimeout01();\n  setTimeout02();\n}\n\n/* runclassesAndThis\n * desc: Examples showing how classes, this and prototypes work.\n */\nfunction runclassesAndThis() {\n\n  console.log(\"\\n--->> runclassesAndThis\");\n  console.log(\"What is this?\");\n  whatIsThis(1);\n  testObjectCreate();\n  console.log(\"Create an animal where methods are set in the animal function body\");\n  const leo1 = Animal_V1(\"Leo the Lion\", 100);\n  console.log(\"leo v1:\", leo1);\n  console.log(\"leo.eat(5) v1:\");\n  leo1.eat(5);\n  console.log(\"Create an animal where methods are picked up using Object.create()\");\n  const leo2 = Animal_V2(\"Leo the Lion\", 100);\n  console.log(\"leo v2:\", leo2);\n  console.log(\"leo.eat(5) v2:\");\n  leo2.eat(5);\n  // Create an Animal with methods in the function's prototype object.\n  console.log(\"Animal created with methods in the function's prototype object\");\n  console.log(\"Remeber that every function automatically has a prototype object contained within it.\");\n  const leo3 = Animal_V3(\"Leo V3\", 300);\n  console.log(\"leo3:\", leo3);\n  console.log(\"leo3.eat(5).  Note: Animal_V3 has a eat method in its prototype.\");\n  console.log(\"Since it was created using Object.create(Animal_V3.prototype) the eat() method will get picked up in the prototype.\");\n  leo3.eat(5);\n  console.log(\"Animal_V3.prototype:\", Animal_V3.prototype);\n  // Create animals by calling the function using new.\n  // new will call Object.create() automatically creating the \"this\" object which will\n  // delegate to the object's prototype.\n  console.log(\"Create Animals calling Animal function using new.\");\n  console.log(\"Calling with new will invoke Object.create() automatically creating the \\\"this\\\" object.\");\n  let leoNew = new AnimalWithNew(\"New Leo\", 1000); // Put \"new\" in front of function invocation.\n  console.log(\"leoNew:\", leoNew);\n  console.log(\"leoNew.eat(6)\");\n  leoNew.eat(6);\n  // Note how this iterates over the prototype chain showing all of the functions\n  // associated with the prototype.\n  for (let key in leoNew) {\n    console.log(`Key: ${key}.  Value: ${leoNew[key]}`);\n  }\n  // We will now use the class keyword to reproduce what was done above using a modern technique.\n  console.log(\"We will now use the class keyword to reproduce what was done above using a modern technique.\");\n  let leoObj = new AnimalAsClass(\"Leo with Class\", 2000);\n  console.log(\"leoObj:\", leoObj);\n  console.log(\"leoObj.eat(7):\");\n  leoObj.eat(7);\n  // When using a class the functions in the prototype are displayed when using for in.\n  for (let key in leoObj) {\n    console.log(`Key: ${key}.  Value: ${leoObj[key]}`);\n  }\n  console.log(\"anAry prototype:\", Object.getPrototypeOf(leoObj));\n  try {\n    leaveOutNew();\n  }\n  catch(err) {\n    console.log(\"Got an error because we called a class as a function without using new.\\n\", err);\n  }\n}\n\nfunction runArrayTests() {\n\n  console.log(\"\\n--->> runArrayTests\");\n  arrayNewTesting();\n}\n\nfunction runBabelGenTest() {\n\n  console.log(\"\\n--->> runBabelGenTest\");\n  console.log(\"let p1 = new PersonAsFunction()\");\n  let p1 = new PersonAsFunction();\n  console.log(\"let p2 = new PersonAsFunction(\\\"Luigi\\\", 21)\");\n  let p2 = new PersonAsFunction(\"Luigi\", 21);\n}\n\n/* runAsyncAwaitBlocker\n * desc: Shows how promises can still result in calls that are blocking and run sequentially.\n */\nasync function runAsyncAwaitBlocker() {\n  log(\"Start: runAsyncAwaitBlocker\");\n\n  log(\"Synchronous 1\");\n  codeBlocker(\"CB1\").then(log);\n  log(\"Synchronous 2\");\n  codeBlocker(\"CB2\").then(log);\n  log(\"Synchronous 3\");\n\n  // log(\"01 await await three tasks in sequence.\");\n  // let startTime = Date.now();\n  // let task1 = await myPromiseStillBlocking(\"task1\");\n  // log(`02 First task is done.  Result: ${task1}`);\n  // let task2 = await myPromiseStillBlocking(\"task2\");\n  // log(`03 Second task is done.  Result: ${task2}`);\n  // let task3 = await myPromiseStillBlocking(\"task3\");\n  // log(`04 Third task is done.  Result: ${task3}`);\n  // let task4 = await myPromiseStillBlocking(\"task4\");\n  // log(`05 Fourth task is done.  Result: ${task4}`);\n  // let task5 = await myPromiseStillBlocking(\"task5\");\n  // let endTime = Date.now();\n  // log(`06 Fifth task is done.  Result: ${task5}`);\n  // console.log(`${endTime-startTime} msec. Total time for 5 tasks run synchronously.`);\n  // console.log(\"Now run the tasks simultameously.\");\n  // startTime = Date.now();\n  // const [task1p, task2p, task3p, task4p, task5p] = await Promise.all([\n  //   myPromiseInParallel(\"task1p\"),\n  //   myPromiseInParallel(\"task2p\"),\n  //   myPromiseInParallel(\"task3p\"),\n  //   myPromiseInParallel(\"task4p\"),\n  //   myPromiseInParallel(\"task5p\")\n  // ]);\n  // endTime = Date.now();\n  // console.log(`${endTime-startTime} msec. Total time for 3 tasks run simultaneously.`); \n  log(\"End: runAsyncAwaitBlocker\");\n}\n\n/* runAsyncAwaitNonBlocker\n * desc: Shows how promises can still result in calls that are blocking and run sequentially.\n */\nasync function runAsyncAwaitNonBlocker() {\n  log(\"Start: runAsyncAwaitNonBlocker\");\n\n  log(\"Synchronous 1\");\n  const a = codeNonBlocker(\"CnB1\");\n  log(\"Synchronous 2\");\n  const b = codeNonBlocker(\"CnB2\");\n  log(\"Synchronous 3\");\n  await Promise.all([a,b]);\n  log(\"End: runAsyncAwaitNonBlocker\");\n}\n\n\n/* runAsyncAwaitPromiseError\n * desc: Shows the correct way to handle errors from functions that return promises.\n */ \nasync function runAsyncAwaitPromiseError() {\n  log(\"Start: runIt\");\n  log(\"01 await myPromiseError\");\n  try {\n    console.log(`Result = ${await myPromiseError()}`);\n  }\n  catch(err) {\n    console.log(\"Caught an error: \", err);\n  }\n  log(\"End: runAsyncAwaitPromiseError\");\n}\n\n\n// Call the runner function here.  Uncomment the ones you'd like to test.\nrunClosureExample();\nrunClosureImplementingACounter();\n//runES6Features();\n//runLexicalScope();\n//runES6Features();\n//runsetTimeout();\n//runBigNumberExample();\n//runclassesAndThis();\n//runArrayTests();\n//runBabelGenTest();\n//runAsyncAwaitBlocker();\n//runAsyncAwaitNonBlocker();\n//runAsyncAwaitPromiseError();\n"],"file":"app.js"}